name: Nightly Tests

on:
  workflow_dispatch:
  schedule:
    - cron: '30 4 * * *'

permissions:
  contents: read

jobs:
  testacc:
    name: Terraform Provider Acceptance Tests
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: '1.0.*'
          terraform_wrapper: false
      - run: go mod download

      - name: Production
        run: go test -v -cover ./internal/provider/
        env:
          TF_ACC: "1"
          BUNNYNET_API_KEY: ${{ secrets.TESTACC_API_KEY }}
          TESTACC_MC_REGION: ${{ vars.TESTACC_MC_REGION_PROD }}

      - name: Staging
        run: go test -v -cover ./internal/provider/
        env:
          TF_ACC: "1"
          BUNNYNET_API_KEY: ${{ secrets.STAGING_TESTACC_API_KEY }}
          BUNNYNET_API_URL: ${{ secrets.STAGING_TESTACC_API_URL }}
          BUNNYNET_CONTAINER_API_URL: ${{ secrets.STAGING_TESTACC_CONTAINER_API_URL }}
          BUNNYNET_STREAM_API_URL: ${{ secrets.STAGING_TESTACC_STREAM_API_URL }}
          TESTACC_MC_REGION: ${{ vars.TESTACC_MC_REGION_STAGING }}

      - name: Notify results
        uses: bunnyway/gitactions-slack-notification@0.1.0
        if: always()
        env:
          SLACK_INCOMING_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
          SLACK_TITLE: 'Terraform Acceptance Tests'
          SLACK_MESSAGE: "Status: ${{ job.status }}\nLogs: https://github.com/BunnyWay/terraform-provider-bunnynet/actions/runs/${{ github.run_id }}"
          SLACK_CHANNEL: ${{ secrets.SLACK_INCOMING_CHANNEL }}
          SLACK_COLOR: ${{ job.status == 'success' && '#2eb886' || '#ff0000' }}
